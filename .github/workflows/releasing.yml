name: Release and publish

on:
  push:
    paths:
      - 'setup.py'  # only release when setup.py has been updated
    branches:
      - main
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools setuptools_scm wheel
          pip install numpy
          pip install -e .
          pip install -e .[tests]

      - name: Test
        run:  |
          pytest tests/test_generator.py  # test generator
          pytest --mpl tests/test_plotter.py  # test plots
          # pytest --mpl-generate-path=tests/data_gaas/remote_baseline tests/test_plotter.py  # generate output plots
          # to run the following image comparison tests and see relative differences, use the CLI
          # pytest --mpl --mpl-generate-summary=html tests/test_plotter.py

      - name: Build packages
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Generate release info
        run: |
          awk 'BEGIN {p = 0} {a = 0 }; /^v\d*.\d*.\d*./ { p += 1; a = 1}; p + a == 1 { print } ' CHANGELOG.rst | sed -e '1,1d' | sed  -e '/./,$!d' -e :a -e '/^\n*$/{$d;N;ba' -e '}' > release_info.txt
          echo "version=$(grep version setup.py | awk -F\" '{print $2}')" >> $GITHUB_ENV

      - name: Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          body_path: release_info.txt
          draft: false
          prerelease: false